apiVersion: v1
kind: Service
metadata:
  name: teamcity
spec:
  selector:
    app: teamcity
  ports:
  - protocol: TCP
    port: 8111
    targetPort: 8111
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity
  template:
    metadata:
      labels:
        app: teamcity
    spec:
      containers:
      - name: teamcity
        image: jetbrains/teamcity-server
        ports:
        - containerPort: 8111
        volumeMounts:
        - name: teamcity-data
          mountPath: /data/teamcity
      volumes:
      - name: teamcity-data
        persistentVolumeClaim:
          claimName: teamcity-data
---
apiVersion: v1
kind: Service
metadata:
  name: teamcity-agent
spec:
  selector:
    app: agent2  # modified to app: agent2
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent2  # modified to name: agent2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent2  # modified to app: agent2
  template:
    metadata:
      labels:
        app: agent2  # modified to app: agent2
    spec:
      containers:
      - name: teamcity-agent  # modified to name: teamcity-agent
        image: jetbrains/teamcity-agent
        env:
        - name: SERVER_URL
          value: "http://teamcity:8111"
        volumeMounts:
        - name: teamcity-agent-data
          mountPath: /data/teamcity_agent/conf
      volumes:
      - name: teamcity-agent-data
        persistentVolumeClaim:
          claimName: teamcity-agent-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teamcity-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teamcity-agent-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: teamcity-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: teamcity-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: teamcity-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
